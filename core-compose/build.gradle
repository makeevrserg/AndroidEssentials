plugins {
    id "com.android.library"
    id "org.jetbrains.kotlin.android"
    id 'maven-publish'
}

android {
    namespace "com.makeevrserg.mvvmcore.core_compose"
    compileSdk appCompileSdk

    defaultConfig {
        minSdk appMinSdk
        targetSdk appTargetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = "1.8"
    }
    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = compose_kotlinCompilerExtensionVersion
    }

}

dependencies {
    implementation "androidx.core:core-ktx:$coreKTX"
    implementation "androidx.appcompat:appcompat:$androidxAppCompat"
    implementation "com.google.android.material:material:$androidMaterial"

    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutines")
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle"


    testImplementation "junit:junit:$jUnit"
    androidTestImplementation "androidx.test.ext:junit:$extJunit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoCore"

    implementation "androidx.activity:activity-compose:$activityCompose"
    implementation "androidx.compose.material:material:$composeMaterial"
    implementation "androidx.compose.animation:animation:$composeAnimation"
    implementation "androidx.compose.ui:ui-tooling:$composeUiTooling"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycleViewModelCompose"

    debugImplementation "androidx.compose.ui:ui-tooling:$composeUiTooling"
    implementation "androidx.compose.ui:ui-tooling-preview:$composeUiTooling"


    implementation(project(":core"))
    implementation(project(":ktx-core"))
}
afterEvaluate{
    publishing{
        publications{
            release(MavenPublication){
                from components.release
                groupId = 'com.github.makeevrserg.mvvmcore'
                artifactId = 'core-compose'
                version = libVersion
            }
        }
    }
}